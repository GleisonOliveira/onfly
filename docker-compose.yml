services:
    onfly.fpm:
        build:
            context: .
            target: fpm_server
        image: onfly/fpm_server
        volumes:
            - './api:/opt/apps/www'
        networks:
            - onfly
        user: "0:0"
        depends_on:
            - composer

    onfly.web:
        build:
            context: .
            target: web_server
        image: onfly/web_server
        ports:
            - '8080:80'
        environment:
            FPM_HOST: "onfly.fpm:9000"
        volumes:
            - './api/public:/opt/apps/www/public'
        networks:
            - onfly
        depends_on:
            - onfly.fpm
    onfly.redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'onfly-redis:/data'
        networks:
            - onfly
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s

    onfly.postgres:
        image: 'postgres:13'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            POSTGRES_DB: '${DB_DATABASE:-api}'
            POSTGRES_USER: '${DB_USERNAME:-api}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-password}'
        volumes:
            - 'onfly-postgres:/var/lib/postgresql/data'
            - './api/docker/postgres/init.sh:/docker-entrypoint-initdb.d/init.sh'
        networks:
            - onfly
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME:-api}"]
            retries: 3
            timeout: 5s
    onfly.consumer:
        build:
            context: .
            target: consumer
        image: onfly/consumer
        volumes:
            - './api:/opt/apps/www'
        networks:
            - onfly
        user: "0:0"
        depends_on:
            - composer
    onfly.node:
        image: node:23-alpine
        ports:
            - '3000:3000'
        volumes:
            - ./site:/opt/apps/www
            - ./site/node_modules:/opt/apps/www/node_modules
        working_dir: /opt/apps/www
        command: npm run serve
        depends_on:
            - node
    node:
        image: node:23-alpine
        volumes:
            - ./site:/opt/apps/www
        working_dir: /opt/apps/www
        command: npm install
    composer:
        image: composer:2
        command: ["composer", "install", "--ignore-platform-reqs"]
        working_dir: /api
        volumes:
            - './api:/api'

networks:
    onfly:

volumes:
    onfly-postgres:
    onfly-redis:
